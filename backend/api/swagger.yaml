openapi: 3.0.0

servers:
  - url: http://localhost/api/v1/
    description: Local Test Server

info:
  title: Secret Keeper REST API Specification
  description: This document is describing the protocol between clients and server.
  version: "1.0.0"
  contact:
    email: oleg.bronzov@gmail.com

paths:
  /ping:
    get:
      summary: Health check.
      operationId: ping
      responses:
        '200':
          description: Return server info
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - uptime
                properties:
                  status:
                    description: Server status - "OK"
                    type: string
                    default: OK
                  uptime:
                    description: Server uptime (in seconds)
                    type: integer

  /secret/create:
    post:
      summary: |
        Creates new secret
      operationId: secret-create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                secret:
                  type: string
                  description: |
                    Secret string to be stored.
                    Omit or send empty, to generate a new password by server.
                    Max length is 10000 characters.
                ttl:
                  type: integer
                  description: |
                    The maximum amount of time (in seconds), that the secret will be alive/available (Time To Live).
                    The secret will be deleted and not recoverable after this amount of time.
                    Omit, to set the max value - 2592000 seconds (30 days).
                pin:
                  type: string
                  description: |
                    A string that recepient must know to view the secret. Yet another factor of security.
                    Omit, to leave secret available without any additional passphrase/pin.
      responses:
        '201':
          description: |
            Created secret data
          content:
            application/json:
              schema:
                type: object
                required:
                  - key
                  - expiration
                  - pin_required
                properties:
                  key:
                    type: string
                    description: |
                      Generated hash to a secret (unique secret key).
                  secret:
                    type: string
                    description: |
                      Secret/password if it has been generated by server.
                  expiration:
                    type: integer
                    description: |
                      A timestamp (expiration date) when the secret will be expired and deleted.
                  pin_required:
                    type: boolean
                    description: |
                      Returns true in case when secret was created with pin and false otherwise.

  /secret/info:
    get:
      summary: |
        Returns information about the secret
      operationId: secret-info
      parameters:
        - in: query
          name: key
          required: true
          schema:
            type: string
          description: unique secret key
      responses:
        '200':
          description: |
            Secret information (if exists and not expired).
          content:
            application/json:
              schema:
                type: object
                required:
                  - expiration
                  - pin_required
                  - tries_left
                properties:
                  expiration:
                    type: integer
                    description: |
                      A timestamp (expiration date) when the secret will be expired and deleted.
                  pin_required:
                    type: boolean
                    description: |
                      Returns true in case when secret was created with pin and false otherwise.
                  tries_left:
                    type: integer
                    description: |
                      Number of left tries until the secret will be blocked and deleted forever.
        '404':
          description: Secret not found or expired

  /secret/view:
    get:
      summary: |
        Returns secret and delete the secret
      operationId: secret-view
      parameters:
        - in: query
          name: key
          required: true
          schema:
            type: string
          description: unique secret key
        - in: query
          name: pin
          required: false
          schema:
            type: string
          description: pin/passphrase if required
      responses:
        '200':
          description: |
            Secret information (if exists and not expired).
          content:
            application/json:
              schema:
                type: object
                required:
                  - secret
                properties:
                  secret:
                    type: string
                    description: |
                      Stored secret string.
        '404':
          description: Secret not found or expired
        '403':
          description: Incorrect pin/passphrase
          content:
            application/json:
              schema:
                type: object
                required:
                  - tries_left
                properties:
                  tries_left:
                    type: integer
                    description: |
                      Number of left tries until the secret will be blocked and deleted forever.

  /secret/delete:
    delete:
      summary: |
        Delete the secret if exists and not expired
      operationId: secret-delete
      parameters:
        - in: query
          name: key
          required: true
          schema:
            type: string
          description: unique secret key
      responses:
        '200':
          description: Secret deleted successfully
        '404':
          description: Secret not found or expired
